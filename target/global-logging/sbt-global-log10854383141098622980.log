[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\shahr\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\shahr\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Amazon.com Inc. Java 11.0.21)
[debug]       Load.loadUnit: plugins took 131.746ms
[debug]       Load.loadUnit: defsScala took 0.3751ms
[debug] [Loading] Scanning directory C:\Users\shahr\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\shahr\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 36.171 ms
[debug]           Load.resolveProject(global-plugins) took 55.9747ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\shahr\.sbt\1.0\plugins, plugins: List(<none>))) took 128.0924ms
[debug] [Loading] Done in C:\Users\shahr\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 162.4468ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3941ms
[debug]     Load.loadUnit(file:/C:/Users/shahr/.sbt/1.0/plugins/, ...) took 307.7527ms
[debug]   Load.apply: load took 505.7892ms
[debug]   Load.apply: resolveProjects took 6.6193ms
[debug]   Load.apply: finalTransforms took 63.3494ms
[debug]   Load.apply: config.delegates took 8.897ms
[debug]   Load.apply: Def.make(settings)... took 583.3352ms
[debug]   Load.apply: structureIndex took 102.176ms
[debug]   Load.apply: mkStreams took 1.6819ms
[info] loading global plugins from C:\Users\shahr\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2992.502ms
[debug]           Load.loadUnit: plugins took 25.7126ms
[debug]           Load.loadUnit: defsScala took 0.0027ms
[debug] [Loading] Scanning directory C:\projects\AkkaHttpProductExample\project
[debug]             Load.loadUnit: mkEval took 6.4664ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\projects\AkkaHttpProductExample\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.807 ms
[info] loading settings for project akkahttpproductexample-build from plugins.sbt,idea.sbt ...
[debug]               Load.resolveProject(akkahttpproductexample-build) took 2.6274ms
[debug]             Load.loadTransitive: finalizeProject(Project(id akkahttpproductexample-build, base: C:\projects\AkkaHttpProductExample\project, plugins: List(<none>))) took 4.949ms
[debug] [Loading] Done in C:\projects\AkkaHttpProductExample\project, returning: (akkahttpproductexample-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2233.0103ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.1006ms
[debug]         Load.loadUnit(file:/C:/projects/AkkaHttpProductExample/project/, ...) took 2265.9322ms
[debug]       Load.apply: load took 2267.9977ms
[debug]       Load.apply: resolveProjects took 0.2463ms
[debug]       Load.apply: finalTransforms took 11.5298ms
[debug]       Load.apply: config.delegates took 0.6875ms
[debug]       Load.apply: Def.make(settings)... took 77.7533ms
[debug]       Load.apply: structureIndex took 29.6542ms
[debug]       Load.apply: mkStreams took 0.0021ms
[info] loading project definition from C:\projects\AkkaHttpProductExample\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3881.3853ms
[debug]     Load.loadUnit: defsScala took 0.0031ms
[debug] [Loading] Scanning directory C:\projects\AkkaHttpProductExample
[debug]       Load.loadUnit: mkEval took 0.2364ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\projects\AkkaHttpProductExample, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtide.ConfigPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.8677 ms
[info] loading settings for project akkahttpproductexample from build.sbt ...
[debug]         Load.resolveProject(akkahttpproductexample) took 28.2119ms
[debug]       Load.loadTransitive: finalizeProject(Project(id akkahttpproductexample, base: C:\projects\AkkaHttpProductExample, plugins: List(<none>))) took 30.6984ms
[debug] [Loading] Done in C:\projects\AkkaHttpProductExample, returning: (akkahttpproductexample)
[debug]     Load.loadUnit: loadedProjectsRaw took 1184.6646ms
[debug]     Load.loadUnit: cleanEvalClasses took 8.4358ms
[debug]   Load.loadUnit(file:/C:/projects/AkkaHttpProductExample/, ...) took 5075.046ms
[debug] Load.apply: load took 5076.4661ms
[debug] Load.apply: resolveProjects took 0.1162ms
[debug] Load.apply: finalTransforms took 26.3378ms
[debug] Load.apply: config.delegates took 0.2884ms
[debug] Load.apply: Def.make(settings)... took 80.401ms
[debug] Load.apply: structureIndex took 19.9932ms
[debug] Load.apply: mkStreams took 0.0028ms
[info] set current project to AkkaHttpProductExample (in build file:/C:/projects/AkkaHttpProductExample/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
